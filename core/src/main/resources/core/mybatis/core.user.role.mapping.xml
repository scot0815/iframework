<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scot.permissions.core.dao.ICoreUserRoleDao" >
  <resultMap id="BaseResultMap" type="com.scot.permissions.core.entity.CoreUserRole" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="creator" property="creator" jdbcType="BIGINT" />
    <result column="update_user" property="updateUser" jdbcType="BIGINT" />
    <result column="inserttime" property="inserttime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="isactive" property="isactive" jdbcType="TINYINT" />
    <result column="core_user_id" property="coreUserId" jdbcType="BIGINT" />
    <result column="role_id" property="roleId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, creator, update_user, inserttime, updatetime, isactive, core_user_id, role_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.scot.permissions.core.entity.CoreUserRoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from core_user_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from core_user_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from core_user_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.scot.permissions.core.entity.CoreUserRoleExample" >
    delete from core_user_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.scot.permissions.core.entity.CoreUserRole" useGeneratedKeys="true" keyProperty="id" >
    insert into core_user_role (id, creator, update_user, 
      inserttime, updatetime, isactive, 
      core_user_id, role_id)
    values (#{id,jdbcType=BIGINT}, #{creator,jdbcType=BIGINT}, #{updateUser,jdbcType=BIGINT}, 
      #{inserttime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{isactive,jdbcType=TINYINT}, 
      #{coreUserId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.scot.permissions.core.entity.CoreUserRole" useGeneratedKeys="true" keyProperty="id" >
    insert into core_user_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="inserttime != null" >
        inserttime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="isactive != null" >
        isactive,
      </if>
      <if test="coreUserId != null" >
        core_user_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="inserttime != null" >
        #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isactive != null" >
        #{isactive,jdbcType=TINYINT},
      </if>
      <if test="coreUserId != null" >
        #{coreUserId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.scot.permissions.core.entity.CoreUserRoleExample" resultType="java.lang.Integer" >
    select count(*) from core_user_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update core_user_role
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=BIGINT},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.inserttime != null" >
        inserttime = #{record.inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isactive != null" >
        isactive = #{record.isactive,jdbcType=TINYINT},
      </if>
      <if test="record.coreUserId != null" >
        core_user_id = #{record.coreUserId,jdbcType=BIGINT},
      </if>
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update core_user_role
    set id = #{record.id,jdbcType=BIGINT},
      creator = #{record.creator,jdbcType=BIGINT},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      inserttime = #{record.inserttime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      isactive = #{record.isactive,jdbcType=TINYINT},
      core_user_id = #{record.coreUserId,jdbcType=BIGINT},
      role_id = #{record.roleId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.scot.permissions.core.entity.CoreUserRole" >
    update core_user_role
    <set >
      <if test="creator != null" >
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="inserttime != null" >
        inserttime = #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isactive != null" >
        isactive = #{isactive,jdbcType=TINYINT},
      </if>
      <if test="coreUserId != null" >
        core_user_id = #{coreUserId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.scot.permissions.core.entity.CoreUserRole" >
    update core_user_role
    set creator = #{creator,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=BIGINT},
      inserttime = #{inserttime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      isactive = #{isactive,jdbcType=TINYINT},
      core_user_id = #{coreUserId,jdbcType=BIGINT},
      role_id = #{roleId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 扩展 -->
  <select id="selectByCoreUserIdAndRoleId" resultMap="BaseResultMap" parameterType="map" >
    SELECT
    <include refid="Base_Column_List" />
    FROM core_user_role
    WHERE
      core_user_id = #{coreUserId,jdbcType=BIGINT}
    AND
      role_id = #{roleId,jdbcType=BIGINT}
    AND
      isactive = 1
  </select>

  <select id="selectCountIsBelong" parameterType="java.util.Map" resultType="int">
    SELECT
      count(id)
    FROM
      core_user_role
    WHERE role_id in
      <foreach item="roleId" index="index" collection="roleIds" open="(" separator="," close=")">
        #{roleId,jdbcType=BIGINT}
      </foreach>
    AND
      core_user_id = #{coreUserId,jdbcType=BIGINT}
    AND
      isactive = 1
  </select>

  <delete id="deleteByCoreUserIdAndRoleIds" parameterType="java.util.Map" >
    DELETE FROM core_user_role
    WHERE role_id in
      <foreach item="roleId" index="index" collection="roleIds" open="(" separator="," close=")">
        #{roleId,jdbcType=BIGINT}
      </foreach>
    AND
      core_user_id = #{coreUserId,jdbcType=BIGINT}
    AND
      isactive = 1
  </delete>

  <insert id="insertList" parameterType="ArrayList">
    INSERT INTO core_user_role
      (id, creator, update_user,
      inserttime, updatetime, isactive,
      core_user_id, role_id)
    VALUES
      <foreach collection="list" item="obj" index="index" separator="," >
        (#{obj.id,jdbcType=BIGINT}, #{obj.creator,jdbcType=BIGINT}, #{obj.updateUser,jdbcType=BIGINT},
        #{obj.inserttime,jdbcType=TIMESTAMP}, #{obj.updatetime,jdbcType=TIMESTAMP}, #{obj.isactive,jdbcType=TINYINT},
        #{obj.coreUserId,jdbcType=BIGINT}, #{obj.roleId,jdbcType=BIGINT})
      </foreach>
  </insert>

  <!-- 获取用户所有角色 -->
  <select id="selectUserRoles" parameterType="Long" resultType="com.scot.permissions.core.entity.CoreRole">
    SELECT
      r.id AS id,
      r.creator AS creator,
      r.update_user AS updateUser,
      r.inserttime AS inserttime,
      r.updatetime AS updatetime,
      r.isactive AS isactive,
      r.role_name AS roleName
    FROM
      core_user_role ur,
      core_role r
    WHERE
      ur.core_user_id = #{coreUserId,jdbcType=BIGINT}
    AND
      r.id = ur.role_id
    AND
      ur.isactive = 1
    AND
      r.isactive = 1
  </select>
  
  <!-- 获取角色下的所有用户 -->
  <select id="selectRoleUsers" resultType="com.scot.permissions.core.entity.CoreUser"
          parameterType="Long">
    SELECT
        u.id AS id,
        u.bz_user_id AS bzUserId,
        u.status AS status,
        u.creator AS creator,
        u.update_user AS updateUser,
        u.inserttime AS inserttime,
        u.updatetime AS updatetime,
        u.isactive AS isactive
    FROM
        core_user_role ur,
        core_user u
    WHERE
        ur.core_user_id = u.id
    AND
        ur.role_id =  #{roleId,jdbcType=BIGINT}
    AND
        ur.isactive = 1
    AND
        u.isactive = 1

  </select>

  <!--角色下用户的数量-->
  <select id="selectCountIsContain" parameterType="java.util.Map" resultType="int">
    SELECT
      count(id)
    FROM
      core_user_role
    WHERE core_user_id in
      <foreach item="coreUserId" index="index" collection="coreUserIds" open="(" separator="," close=")">
        #{coreUserId,jdbcType=BIGINT}
      </foreach>
    AND
      role_id = #{roleId,jdbcType=BIGINT}
    AND
      isactive = 1
  </select>

  <!--删除角色下的用户数组-->
  <delete id="deleteByRoleIdAndCoreUserIds" parameterType="java.util.Map" >
    DELETE FROM core_user_role
    WHERE core_user_id in
      <foreach item="coreUserId" index="index" collection="coreUserIds" open="(" separator="," close=")">
        #{coreUserId,jdbcType=BIGINT}
      </foreach>
    AND
      role_id = #{roleId,jdbcType=BIGINT}
    AND
      isactive = 1
  </delete>

</mapper>