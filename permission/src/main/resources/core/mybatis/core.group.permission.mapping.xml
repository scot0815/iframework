<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scot.iframework.permission.dao.ICoreGroupPermissionDao" >
  <resultMap id="BaseResultMap" type="com.scot.iframework.permission.entity.CoreGroupPermission" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="creator" property="creator" jdbcType="BIGINT" />
    <result column="update_user" property="updateUser" jdbcType="BIGINT" />
    <result column="inserttime" property="inserttime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="isactive" property="isactive" jdbcType="TINYINT" />
    <result column="group_id" property="groupId" jdbcType="BIGINT" />
    <result column="permission_id" property="permissionId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, creator, update_user, inserttime, updatetime, isactive, group_id, permission_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.scot.iframework.permission.entity.CoreGroupPermissionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from core_group_permission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from core_group_permission
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from core_group_permission
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.scot.iframework.permission.entity.CoreGroupPermissionExample" >
    delete from core_group_permission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.scot.iframework.permission.entity.CoreGroupPermission" >
    insert into core_group_permission (id, creator, update_user, 
      inserttime, updatetime, isactive, 
      group_id, permission_id)
    values (#{id,jdbcType=BIGINT}, #{creator,jdbcType=BIGINT}, #{updateUser,jdbcType=BIGINT}, 
      #{inserttime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{isactive,jdbcType=TINYINT}, 
      #{groupId,jdbcType=BIGINT}, #{permissionId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.scot.iframework.permission.entity.CoreGroupPermission" >
    insert into core_group_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="inserttime != null" >
        inserttime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="isactive != null" >
        isactive,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="permissionId != null" >
        permission_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="inserttime != null" >
        #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isactive != null" >
        #{isactive,jdbcType=TINYINT},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="permissionId != null" >
        #{permissionId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.scot.iframework.permission.entity.CoreGroupPermissionExample" resultType="java.lang.Integer" >
    select count(*) from core_group_permission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update core_group_permission
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=BIGINT},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.inserttime != null" >
        inserttime = #{record.inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isactive != null" >
        isactive = #{record.isactive,jdbcType=TINYINT},
      </if>
      <if test="record.groupId != null" >
        group_id = #{record.groupId,jdbcType=BIGINT},
      </if>
      <if test="record.permissionId != null" >
        permission_id = #{record.permissionId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update core_group_permission
    set id = #{record.id,jdbcType=BIGINT},
      creator = #{record.creator,jdbcType=BIGINT},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      inserttime = #{record.inserttime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      isactive = #{record.isactive,jdbcType=TINYINT},
      group_id = #{record.groupId,jdbcType=BIGINT},
      permission_id = #{record.permissionId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.scot.iframework.permission.entity.CoreGroupPermission" >
    update core_group_permission
    <set >
      <if test="creator != null" >
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="inserttime != null" >
        inserttime = #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isactive != null" >
        isactive = #{isactive,jdbcType=TINYINT},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=BIGINT},
      </if>
      <if test="permissionId != null" >
        permission_id = #{permissionId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.scot.iframework.permission.entity.CoreGroupPermission" >
    update core_group_permission
    set creator = #{creator,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=BIGINT},
      inserttime = #{inserttime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      isactive = #{isactive,jdbcType=TINYINT},
      group_id = #{groupId,jdbcType=BIGINT},
      permission_id = #{permissionId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--扩展-->

  <!--根据组id、角色id获取用户权限关系数据-->
  <select id="selectByGroupIdAndPermissionId" resultMap="BaseResultMap" parameterType="map" >
    SELECT
      <include refid="Base_Column_List" />
    FROM core_group_permission
    WHERE
      group_id = #{groupId,jdbcType=BIGINT}
    AND
      permission_id = #{permissionId,jdbcType=BIGINT}
    AND
      isactive = 1
  </select>

  <!-- 获取groupId包含permissionIds中权限的数量 -->
  <select id="selectCountIsContain" parameterType="java.util.Map" resultType="int">
    SELECT
      count(id)
    FROM
    core_group_permission
    WHERE permission_id in
      <foreach item="permissionId" index="index" collection="permissionIds" open="(" separator="," close=")">
        #{permissionId,jdbcType=BIGINT}
      </foreach>
    AND
      group_id = #{groupId,jdbcType=BIGINT}
    AND
      isactive = 1
  </select>

  <!--根据groupId删除PermissionIds中的所有权限-->
  <delete id="deleteByGroupIdAndPermissionIds" parameterType="java.util.Map" >
    DELETE from core_group_permission
    where permission_id in
      <foreach item="permissionId" index="index" collection="permissionIds" open="(" separator="," close=")">
        #{permissionId,jdbcType=BIGINT}
      </foreach>
    AND
      group_id = #{groupId,jdbcType=BIGINT}
    AND
      isactive = 1
  </delete>

  <!--批量插入-->
  <insert id="insertList" parameterType="ArrayList">
    INSERT INTO
      core_group_permission (id, creator, update_user,
      inserttime, updatetime, isactive,
      group_id, permission_id)
    VALUES
      <foreach collection="list" item="obj" index="index" separator="," >
        (#{obj.id,jdbcType=BIGINT}, #{obj.creator,jdbcType=BIGINT}, #{obj.updateUser,jdbcType=BIGINT},
        #{obj.inserttime,jdbcType=TIMESTAMP}, #{obj.updatetime,jdbcType=TIMESTAMP}, #{obj.isactive,jdbcType=TINYINT},
        #{obj.groupId,jdbcType=BIGINT}, #{obj.permissionId,jdbcType=BIGINT})
      </foreach>
  </insert>

  <!--获取用户所属组的所有权限（包含组所属的角色权限）-->
  <select id="selectUserGroupsPermissions" resultType="com.scot.iframework.permission.entity.CorePermission"
          parameterType="Long">
      SELECT
        p.id AS id,
        p.creator AS creator,
        p.update_user AS updateUser,
        p.inserttime AS inserttime,
        p.updatetime AS updatetime,
        p.isactive AS isactive,
        p.function_flag AS functionFlag,
        p.function_code AS functionCode,
        p.parent_function_code AS parentFunctionCode,
        p.url AS url,
        p.type AS type,
        p.is_child AS isChild,
        p.category AS category,
        p.tier AS tier
      FROM
          core_permission p,
          (
              SELECT
                  gp.permission_id
              FROM
                  core_user_group ug,
                  core_group g,
                  core_group_permission gp
              WHERE
                  ug.core_user_id = #{coreUserId,jdbcType=BIGINT}
                  AND ug.group_id = g.id
                  AND g.id = gp.group_id
                  AND ug.isactive = 1
                  AND g.isactive = 1
                  AND gp.isactive = 1
          UNION SELECT
                  rp.permission_id
              FROM
                  core_user_group ug,
                  core_group g,
                  core_group_role gr,
                  core_role_permission rp
              WHERE
                  ug.core_user_id = #{coreUserId,jdbcType=BIGINT}
                  and ug.group_id = g.id
                  and g.id = gr.group_id
                  and gr.role_id = rp.role_id
                  and ug.isactive = 1
                  and g.isactive = 1
                  and gr.isactive = 1
                  and rp.isactive = 1
          ) s
      WHERE
          p.id = s.permission_id
      ORDER BY
          p.function_code
  </select>

  <!--获取组自身权限-->
  <select id="selectGroupPermissions" parameterType="Long" resultType="com.scot.iframework.permission.entity.CorePermission">
    SELECT
      p.id AS id,
      p.creator AS creator,
      p.update_user AS updateUser,
      p.inserttime AS inserttime,
      p.updatetime AS updatetime,
      p.isactive AS isactive,
      p.function_flag AS functionFlag,
      p.function_code AS functionCode,
      p.parent_function_code AS parentFunctionCode,
      p.url AS url,
      p.type AS type,
      p.is_child AS isChild,
      p.category AS category,
      p.tier AS tier
    FROM
      core_group_permission gp,
      core_permission p
    WHERE
      gp.group_id = #{groupId,jdbcType=BIGINT}
    AND
      gp.permission_id = p.id
    AND
      gp.isactive = 1
    AND
      p.isactive = 1
    ORDER BY
      p.function_code
  </select>

  <!--获取组所有权限-->
  <select id="selectGroupAllPermissions" parameterType="Long" resultType="com.scot.iframework.permission.entity.CorePermission">
    SELECT
	  p.id AS id,
      p.creator AS creator,
      p.update_user AS updateUser,
      p.inserttime AS inserttime,
      p.updatetime AS updatetime,
      p.isactive AS isactive,
      p.function_flag AS functionFlag,
      p.function_code AS functionCode,
      p.parent_function_code AS parentFunctionCode,
      p.url AS url,
      p.type AS type,
      p.is_child AS isChild,
      p.category AS category,
      p.tier AS tier
    FROM
        core_permission p,
        (
            SELECT
                gp.permission_id
            FROM
                core_group_permission gp
            WHERE
                gp.group_id = #{groupId,jdbcType=BIGINT}
                AND gp.isactive = 1
        UNION SELECT
                rp.permission_id
            FROM
                core_group_role gr,
                core_role_permission rp
            WHERE
                gr.group_id = #{groupId,jdbcType=BIGINT}
                and gr.role_id = rp.role_id
                and gr.isactive = 1
                and rp.isactive = 1
        ) s
    WHERE
        p.id = s.permission_id
    ORDER BY
        p.function_code
  </select>

</mapper>